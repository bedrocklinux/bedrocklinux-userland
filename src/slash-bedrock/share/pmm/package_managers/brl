#!/bedrock/libexec/busybox awk -f
#
# Package Manager Manager brl support script
#
#      This program is free software; you can redistribute it and/or
#      modify it under the terms of the GNU General Public License
#      version 2 as published by the Free Software Foundation.
#
# Copyright (c) 2018-2020 Daniel Thau <danthau@bedrocklinux.org>

#
# brl is surfaced via pmm primarily so that `brl update` is included in
# system-wide update commands.  Since brl is not actually a package manager,
# most other operations do not actually make sense with it.
#
# It may be temping to treat brl's strata as packages such that users can `pmm
# install <distro>` or `pmm fetch <pkg>`.  However, in testing this was found
# to be more annoying than useful.  It required users maintain strata list in
# the world file, as well as filter out brl results from package searches.
#

system_package_managers["brl"]
package_manager_canary_executables["brl"] = "/bin/brl"

#
# General, operation independent flags.
#
# Unlike operations, flags should not have implementations[].
#
user_interfaces["brl", "assume-no"]  = ""
user_interfaces["brl", "assume-yes"] = ""
user_interfaces["brl", "confirm"]    = ""
user_interfaces["brl", "quiet"]      = ""
user_interfaces["brl", "verbose"]    = ""

#
# Operations which directly forward the underlying command output.
#
user_interfaces["brl", "install-packages"]         = ""
user_interfaces["brl", "reinstall-packages"]       = ""
user_interfaces["brl", "remove-packages-limited"]  = ""
user_interfaces["brl", "remove-packages-full"]     = ""
user_interfaces["brl", "verify-packages"]          = ""
user_interfaces["brl", "verify-all-packages"]      = ""
user_interfaces["brl", "mark-packages-explicit"]   = ""
user_interfaces["brl", "mark-packages-implicit"]   = ""
user_interfaces["brl", "show-package-information"] = ""
user_interfaces["brl", "clear-cache"]              = ""
user_interfaces["brl", "remove-orphans"]           = ""
user_interfaces["brl", "update-package-database"]  = ""
user_interfaces["brl", "update-file-database"]     = ""
user_interfaces["brl", "upgrade-packages-limited"] = "" # uses combine update,upgrade
user_interfaces["brl", "upgrade-packages-full"]    = "" # uses combine update,upgrade

implementations["brl", "install-packages"]         = ""
implementations["brl", "reinstall-packages"]       = ""
implementations["brl", "remove-packages-limited"]  = ""
implementations["brl", "remove-packages-full"]     = ""
implementations["brl", "verify-packages"]          = ""
implementations["brl", "verify-all-packages"]      = ""
implementations["brl", "mark-packages-explicit"]   = ""
implementations["brl", "mark-packages-implicit"]   = ""
implementations["brl", "show-package-information"] = ""
implementations["brl", "clear-cache"]              = "${root_user} rm -rf /bedrock/var/cache/"
implementations["brl", "remove-orphans"]           = ""
implementations["brl", "update-package-database"]  = "${root_user} brl update"
implementations["brl", "update-file-database"]     = ""
implementations["brl", "upgrade-packages-limited"] = "${root_user} brl update"
implementations["brl", "upgrade-packages-full"]    = "${root_user} brl update"

#
# Combine operations.
#
user_interfaces["brl", "clear-cache,remove-orphans"]                                                             = ""
user_interfaces["brl", "mark-packages-implicit,remove-orphans"]                                                  = ""
user_interfaces["brl", "remove-packages-limited,remove-orphans"]                                                 = ""
user_interfaces["brl", "remove-packages-full,remove-orphans"]                                                    = ""
user_interfaces["brl", "update-package-database,update-file-database"]                                           = ""
user_interfaces["brl", "update-package-database,upgrade-packages-partial"]                                       = ""
user_interfaces["brl", "update-package-database,upgrade-packages-full"]                                          = ""
user_interfaces["brl", "update-package-database,update-file-database,upgrade-packages-partial"]                  = ""
user_interfaces["brl", "update-package-database,update-file-database,upgrade-packages-full"]                     = "pmm update"
user_interfaces["brl", "update-package-database,install-packages"]                                               = ""
user_interfaces["brl", "update-package-database,update-file-database,install-packages"]                          = ""
user_interfaces["brl", "upgrade-packages-limited,install-packages"]                                              = ""
user_interfaces["brl", "upgrade-packages-full,install-packages"]                                                 = ""
user_interfaces["brl", "update-package-database,upgrade-packages-partial,install-packages"]                      = ""
user_interfaces["brl", "update-package-database,upgrade-packages-full,install-packages"]                         = ""
user_interfaces["brl", "update-package-database,update-file-database,upgrade-packages-partial,install-packages"] = ""
user_interfaces["brl", "update-package-database,update-file-database,upgrade-packages-full,install-packages"]    = ""

implementations["brl", "clear-cache,remove-orphans"]                                                             = ""
implementations["brl", "mark-packages-implicit,remove-orphans"]                                                  = ""
implementations["brl", "remove-packages-limited,remove-orphans"]                                                 = ""
implementations["brl", "remove-packages-full,remove-orphans"]                                                    = ""
implementations["brl", "update-package-database,update-file-database"]                                           = ""
implementations["brl", "update-package-database,upgrade-packages-partial"]                                       = "${root_user} brl update"
implementations["brl", "update-package-database,upgrade-packages-full"]                                          = "${root_user} brl update"
implementations["brl", "update-package-database,update-file-database,upgrade-packages-partial"]                  = "${root_user} brl update"
implementations["brl", "update-package-database,update-file-database,upgrade-packages-full"]                     = "${root_user} brl update"
implementations["brl", "update-package-database,install-packages"]                                               = ""
implementations["brl", "update-package-database,update-file-database,install-packages"]                          = ""
implementations["brl", "upgrade-packages-limited,install-packages"]                                              = ""
implementations["brl", "upgrade-packages-full,install-packages"]                                                 = ""
implementations["brl", "update-package-database,upgrade-packages-partial,install-packages"]                      = ""
implementations["brl", "update-package-database,upgrade-packages-full,install-packages"]                         = ""
implementations["brl", "update-package-database,update-file-database,upgrade-packages-partial,install-packages"] = ""
implementations["brl", "update-package-database,update-file-database,upgrade-packages-full,install-packages"]    = ""

#
# Operations which have a standardized output format.
#
user_interfaces["brl", "list-installed-package-files"] = ""
user_interfaces["brl", "list-installed-explicit"]      = ""
user_interfaces["brl", "list-installed-implicit"]      = ""
user_interfaces["brl", "list-installed-packages"]      = ""
user_interfaces["brl", "list-available-packages"]      = ""
user_interfaces["brl", "search-for-package-by-name"]   = ""
user_interfaces["brl", "search-for-package-by-all"]    = ""
user_interfaces["brl", "which-package-owns-file"]      = ""
user_interfaces["brl", "which-packages-provide-file"]  = ""

implementations["brl", "list-installed-package-files"] = ""
implementations["brl", "list-installed-explicit"]      = ""
implementations["brl", "list-installed-implicit"]      = ""
implementations["brl", "list-installed-packages"]      = ""
implementations["brl", "list-available-packages"]      = ""
implementations["brl", "search-for-package-by-name"]   = ""
implementations["brl", "search-for-package-by-all"]    = ""
implementations["brl", "which-package-owns-file"]      = ""
implementations["brl", "which-packages-provide-file"]  = ""

#
# Internal pmm operations.
#
implementations["brl", "is-package-installed"]               = "false"
implementations["brl", "is-package-available"]               = "false"
implementations["brl", "is-file-db-available"]               = "true" # if false, would prompt user to remedy
implementations["brl", "print-file-db-install-instructions"] = ""
implementations["brl", "print-package-version"]              = "echo 0"
implementations["brl", "cache-package-db"]                   = ""
