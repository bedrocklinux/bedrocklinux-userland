#!/bedrock/libexec/busybox sh
#
# Slackware bootstrap support
#
#      This program is free software; you can redistribute it and/or
#      modify it under the terms of the GNU General Public License
#      version 2 as published by the Free Software Foundation.
#
# Copyright (c) 2016-2019 Daniel Thau <danthau@bedrocklinux.org>
#

# shellcheck source=src/slash-bedrock/libexec/brl-fetch
. /bedrock/share/common-code
trap 'fetch_abort "Unexpected error occurred."' EXIT

check_supported() {
	false
}

speed_test_url() {
	echo "/slackware64-current/CHECKSUMS.md5"
}

list_mirrors() {
	mirror_list_url='https://mirrors.slackware.com/mirrorlist/'
	wget -O- "${mirror_list_url}" 2>/dev/null |
		sed 's/[<> \t\n\r]/\n/g' |
		awk -F"[=>]" '/^href=/ || /^HREF=/ {print$2}' |
		grep "^http"
}

brl_arch_to_distro() {
	case "${1}" in
	"x86_64") echo "x86_64" ;;
	*) abort "brl does not know how to translate arch \"${1}\" to ${distro} format" ;;
	esac
}

list_architectures() {
	echo "x86_64"
}

default_release() {
	list_releases | grep -ve "current" | sort -nr | head -n1
}

list_releases() {
	for mirror in "${flag_mirror}" $(list_mirrors); do
		if wget -O- "${mirror}" 2>/dev/null |
			list_links |
			grep -e '^slackware64-[0-9]' |
			sed -e 's/^slackware64-//' -e 's,/$,,'; then
			echo "current"
			break
		fi
	done
}

fetch() {
	step "Downloading bootstrap packages"
	wget -O "${bootstrap_dir}/checksum" "${target_mirror}/slackware64-${target_release}/slackware64/CHECKSUMS.md5"

	checksum_downloads "${cache}/packages/" "$(
		awk -vm="${target_mirror}/slackware64-${target_release}/slackware64/" '
		x && $2 ~ /^[.]\/[al]\/.*[.]txz$/ {
			printf "%s%s\tmd5sum\t%s\n", m, $2, $1
		}
		/^MD5 message digest.*Filename/{
			x=1
		}
		' "${bootstrap_dir}/checksum"
	)"

	step "Extracting bootstrap packages"
	total="$(find "${cache}/packages/" -mindepth 1 | wc -l)"
	cp /bedrock/libexec/busybox "${bootstrap_dir}/busybox"
	for pkg in "${cache}/packages/"*; do
		# unxz can refuse to operate if it does not recognize the file extension.  Using cat to work around this.
		# shellcheck disable=SC2002
		cat "${pkg}" | unxz | tar x -C "${bootstrap_dir}"
		if [ -s "${bootstrap_dir}/install/doinst.sh" ]; then
			chroot "${bootstrap_dir}" /busybox sh install/doinst.sh 2>/dev/null || true
		fi
		rm -rf "${bootstrap_dir}/install"
		echo "x"
	done | progress_bar "${total}"

	step "Running bootstrap software"
	setup_chroot "${bootstrap_dir}"
	share_cache "packages" "${bootstrap_dir}/packages"
	for pkg in "${cache}/packages/"*; do
		pkg="$(echo "${pkg}" | sed 's,^.*/,,')"
		LC_ALL=C chroot "${bootstrap_dir}" /sbin/installpkg --root "/target-root" "/packages/${pkg}" >/dev/null 2>&1
		echo "x"
	done | progress_bar "${total}"
}
