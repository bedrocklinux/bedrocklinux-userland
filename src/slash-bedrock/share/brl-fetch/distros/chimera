#!/bedrock/libexec/busybox sh
#
# Chimera Linux bootstrap support
#
# Permission to use, copy, modify, and/or distribute this software for
# any purpose with or without fee is hereby granted;
# According to the terms of the BSD Zero Clause License.
# 
# Copyright (c) 2024 Anthony Slab
#

# shellcheck source=src/slash-bedrock/libexec/brl-fetch
. /bedrock/share/common-code
trap 'fetch_abort "Unexpected error occurred."' EXIT

check_supported() {
	false
}

speed_test_url() {
	echo "current/main/${distro_arch}/APKINDEX.tar.gz"
}

list_mirrors() {
	cat <<EOF # from https://chimera-linux.org/docs/apk/mirrors
https://repo.chimera-linux.org
https://chimera.sakamoto.pl
https://au.mirror.7bit.org/chimera
EOF
}

brl_arch_to_distro() {
	case "$1" in
		"aarch64") echo "aarch64" ;;
		"riscv64") echo "riscv64" ;;
		"ppc64")   echo "ppc64" ;;
		"ppc64le") echo "ppc64le" ;;
		"x86_64")  echo "x86_64" ;;
		*) abort "brl does not know how to translate arch \"${1}\" to ${distro} format" ;;
	esac
}

list_architectures() {
	cat <<EOF # from https://chimera-linux.org/docs/installation
aarch64
riscv64
ppc64
ppc64le
x86_64
EOF
}

default_release() {
	echo "current"
}

list_releases() {
	echo "current"
}

fetch() {
	step "Downloading bootstrap software"
	url="$(find_link "${target_mirror}/apk/" "^apk-${target_arch}-.*.static")"
	apk="$(basename ${url})"
	download "${url}" "${bootstrap_dir}/${apk}"

	download "${target_mirror}/apk/sha256sums.txt" "${bootstrap_dir}/shasums"
	[ "$(sha256sum ${bootstrap_dir}/${apk} | tr -d' ' -f1)" = "$(grep ${apk} ${bootstrap_dir}/shasums | tr -d' ' -f1)" ] \
      		|| { echo "ERROR: checksums did not match"; false; }

	step "Preparing bootstrap software"
	chmod a+rx "${bootstrap_dir}/${apk}"
	mkdir -p "${target_dir}/etc/apk/"

	step "Running bootstrap software"
	setup_chroot "${bootstrap_dir}"
	setup_ssl "${bootstrap_dir}"
	LC_ALL=C chroot "${bootstrap_dir}" "/${apk}" -X "${target_mirror}/${target_release}/main" -U \
		--allow-untrusted --root "/target-root" --initdb add base-minimal
}
